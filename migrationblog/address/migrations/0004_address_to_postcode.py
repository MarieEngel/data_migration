# Generated by Django 4.0.2 on 2022-02-02 11:30
import re
from django.db import migrations


# 4) before changing the migration file: backup db: pg_dump -U user1 -W -h 127.0.0.1  newdatabase > database.sql

# 5) https://docs.djangoproject.com/en/4.0/topics/migrations/  <- adapt example data migration & use regexp -> migrate

def extract_postcode(apps, schema_editor):
    # We can't import the AddressBook model directly as it may be a newer
    # version than this migration expects. We use the historical version.
    AddressBook = apps.get_model('address', 'AddressBook')
    for address in AddressBook.objects.all():
        address_description = address.address
        postcodes = re.findall(r"\D(\d{5})\D", address_description)
        if len(postcodes) > 0:
            address.postcode = postcodes[0]
        address.save()


# 6) reverse migration in case there is need to unapply the migration later:

def put_post_code_in_address(apps, schema_editor):
    # We can't import the AddressBook model directly as it may be a newer
    # version than this migration expects. We use the historical version.
    AddressBook = apps.get_model('address', 'AddressBook')
    for address in AddressBook.objects.all():
        address.address = f"---{address.postcode}---"      
        address.save()
         

class Migration(migrations.Migration):

    dependencies = [
        ('address', '0003_addressbook_postcode'),
    ]
# 5) & 6) register the functions:
    operations = [
        migrations.RunPython(extract_postcode, put_post_code_in_address),
    ]

# 7) to check unapplying  migration: migrate address 0003 --> reapply after checking : migrate
# -> models.py
